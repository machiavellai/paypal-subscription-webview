"use client"; // This ensures the page is client-side rendered

import { PayPalScriptProvider, PayPalButtons } from "@paypal/react-paypal-js";
import type { CreateSubscriptionActions, OnApproveData, OnApproveActions } from "@paypal/react-paypal-js";

// Extend the Window interface to include ReactNativeWebView
declare global {
  interface Window {
    ReactNativeWebView?: {
      postMessage: (message: string) => void;
    };
  }
}

export default function Home() {
  const createSubscription = (data: unknown, actions: CreateSubscriptionActions) => {
    return actions.subscription.create({
      plan_id: "P-XYZ", // Replace with your Plan ID from Step 2
    });
  };

  const onApprove = (data: OnApproveData, actions: OnApproveActions) => {
    // Ensure subscriptionID exists before proceeding
    if (!data.subscriptionID) {
      const message = JSON.stringify({
        type: "SUBSCRIPTION_ERROR",
        error: "Subscription ID is missing",
      });
      window.ReactNativeWebView?.postMessage(message);
      alert("Error: Subscription ID is missing");
      return;
    }

    // Send the subscription ID back to the React Native app
    const message = JSON.stringify({
      type: "SUBSCRIPTION_SUCCESS",
      subscriptionID: data.subscriptionID,
    });
    window.ReactNativeWebView?.postMessage(message);
    alert(`Subscription successful! Subscription ID: ${data.subscriptionID}`);
  };

  const onError = (err: Error) => {
    const message = JSON.stringify({
      type: "SUBSCRIPTION_ERROR",
      error: err.message,
    });
    window.ReactNativeWebView?.postMessage(message);
    alert(`Error: ${err.message}`);
  };

  return (
    <div style={{ padding: "20px", textAlign: "center" }}>
      <h2>Subscribe to Kingdom Comics</h2>
      <PayPalScriptProvider
        options={{
          clientId: process.env.NEXT_PUBLIC_PAYPAL_CLIENT_ID!,
          vault: true,
          intent: "subscription",
        }}
      >
        <PayPalButtons
          createSubscription={createSubscription}
          onApprove={onApprove}
          onError={onError}
          style={{ layout: "vertical", label: "subscribe" }}
        />
      </PayPalScriptProvider>
    </div>
  );
}